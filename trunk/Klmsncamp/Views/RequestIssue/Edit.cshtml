@using Telerik.Web.Mvc.UI
@model Klmsncamp.Models.RequestIssue
@{
    ViewBag.Title = "İş İstek Düzenleme";
}
<script src="@Url.Content("~/Scripts/chosen.jquery.js")" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/chosen.css")" />
@{ Html.Telerik().ScriptRegistrar()
        .OnDocumentReady(@<text> var comboreason = $("#RequestActualReasonID").data("tComboBox");
    if (comboreason.value() > 0 ){ $('#rqreason-box').show();} else { $('#rqreason-box').hide();}
    $(".chzn-choices input").live('hover', function(){ $('.chzn-container').css('zIndex',1);
    $(this).closest('.chzn-container').css('zIndex',100); }); $(".chzn-select").chosen();
    $(".chzn-select-deselect").chosen({ allow_single_deselect: true });
    </text>); }
<script type="text/javascript">
    function TimePickerSet24h() {
        var picker = $("#StartDate").data("tDateTimePicker");
        picker.timeView.format = "HH:mm";
        picker.timeView.bind();
    }
    function EndTimePickerSet24h() {
        var picker = $("#EndDate").data("tDateTimePicker");
        picker.timeView.format = "HH:mm";
        picker.timeView.bind();
    }
    var fields = 0;
    function addInput() {
        if (fields != 5) {
            document.getElementById('add-file-field').innerHTML += "<input id='files-to-upload' type='file' name='file' /><br />";
            fields += 1;
        } else {
            document.getElementById('add-file-field').innerHTML += "<br />Bir Seferde En çok 5 Dosya Eklenebilir";
            document.getElementById('addfile').disabled = true;
        }
    }

    function onRequestActualReasonIDChange(e) {
        var combo = $("#RequestActualReasonID").data("tComboBox");
        if (combo.value() > 0) {
            $('#rqreason-box').show();
        }
        else {
            $('#rqreason-box').hide();
        }
    }
</script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div align="center" style="width: 640px; margin-left: auto; margin-right: auto; margin-top: 30px;">
    @using (Html.BeginForm("Edit", "RequestIssue", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.RequestIssueID)
        @Html.HiddenFor(model => model.WorkshopID)
        <fieldset class="module aligned ">
            <table style="width: 100%; margin-top: 15px;">
                <tbody>
                    <thead>
                        <th colspan="2">
                            İş İstek Düzenleme
                        </th>
                    </thead>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.LocationID)
                        </td>
                        @if (Model.ValidationStateID == 1 && User.IsInRole("moderators") == false)
                        {
                            @Html.HiddenFor(model => model.LocationID)
                            <td style="color: #A80000; vertical-align: middle; text-align: left;">
                                @Model.Location.Description
                            </td>
                        }
                        else
                        {
                            <td style="vertical-align: middle; text-align: left;">
                                <br />
                                @(Html.Telerik().ComboBox()
                .Name("LocationID")
                .HtmlAttributes(new { id = "ComboBox_wrapper_location" })
                .AutoFill(true).HtmlAttributes(new { style = "width:210px;" }).DropDownHtmlAttributes(new { style = "width: 210px;" }).InputHtmlAttributes(new { style = "vertical-align: middle; font-size:100%; border: 1px solid; width: 200px;" })
                .BindTo((SelectList)ViewBag.LocationID)
                .Filterable(filtering => filtering.FilterMode((AutoCompleteFilterMode)Enum.Parse(typeof(AutoCompleteFilterMode), "2", false)))
                .HighlightFirstMatch(true)
                )
                                <br />
                                @Html.ValidationMessageFor(model => model.LocationID)
                            </td>
                        }
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.PersonnelID)
                        </td>
                        <td style="vertical-align: middle; text-align: left;">
                            <br />
                            @(Html.Telerik().ComboBox()
                .Name("PersonnelID")
                .HtmlAttributes(new { id = "ComboBox_wrapper_personnel" })
                .AutoFill(true).HtmlAttributes(new { style = "width:210px;" }).DropDownHtmlAttributes(new { style = "width: 210px;" }).InputHtmlAttributes(new { style = "vertical-align: middle; font-size:100%; border: 1px solid; width: 200px;" })
                .BindTo((SelectList)ViewBag.PersonnelID)
                .Filterable(filtering => filtering.FilterMode((AutoCompleteFilterMode)Enum.Parse(typeof(AutoCompleteFilterMode), "2", false)))
                .HighlightFirstMatch(true)
                )
                            <br />
                            @Html.ValidationMessageFor(model => model.PersonnelID)
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.InventoryID)
                        </td>
                        <td style="vertical-align: middle; text-align: left;">
                            @Html.DropDownList("InventoryID", String.Empty)
                            @Html.ValidationMessageFor(model => model.InventoryID)
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.RequestTypeID)
                        </td>
                        <td style="vertical-align: middle; text-align: left;">
                            @Html.DropDownList("RequestTypeID", String.Empty)<br />
                            @Html.ValidationMessageFor(model => model.RequestTypeID)
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.Projects)
                        </td>
                        <td align="left" style="text-align: left;">@Html.ListBox("DetailProjectID", null, new { @class = "chzn-select", style = "width: 350px;" })
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.Locations)
                        </td>
                        <td align="left" style="text-align: left;">@Html.ListBox("DetailLocationID", null, new { @class = "chzn-select", style = "width: 350px;" })
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.CorporateAccounts)
                        </td>
                        <td align="left" style="text-align: left;">
                            @Html.ListBox("DetailCorporateAccountID", null, new { @class = "chzn-select", style = "width: 350px;" })
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.Locations)
                        </td>
                        <td align="left" style="text-align: left;">@Html.ListBox("DetailPersonnelID", null, new { @class = "chzn-select", style = "width: 350px;" })
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            Ek Dosyalar
                        </td>
                        <td style="vertical-align: middle; text-align: left;">
                            <ul>
                                <li>
                                    <input type="button" class="default" value="Ekle" onclick="javascript: addInput();"
                                        id="addfile" /></li>
                                @foreach (var xfileitem in this.Model.RequestIssueFiles)
                                {
                                    <li>@Html.ActionLink("(Sil)", "DeleteRequestIssueFile", new { id = xfileitem.RequestIssueFileID, rqid = this.Model.RequestIssueID, show = ViewBag.show, page = ViewBag.page })&nbsp;|&nbsp;@Html.ActionLink(xfileitem.RequestIssueFileName + " (indir)", "DownloadRequestIssueFile", new { id = xfileitem.RequestIssueFileID })&nbsp;(@asMb(xfileitem.RequestIssueFileSize)&nbsp;Mb)</li>

                                }
                            </ul>
                            <br />
                            <div id="add-file-field">
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.DetailedDescription)
                        </td>
                        <td style="vertical-align: middle; text-align: left;">
                            @Html.TextAreaFor(model => model.DetailedDescription, new { cols = "50", rows = "4" })
                            @Html.ValidationMessageFor(model => model.DetailedDescription)
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.StartDate)
                        </td>
                        <td style="vertical-align: middle; text-align: left;">
                            @Html.Telerik().DateTimePickerFor(model => model.StartDate).Name("StartDate").ClientEvents(events => events.OnLoad("TimePickerSet24h"))
                            @Html.ValidationMessageFor(model => model.StartDate)
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.EndDate)
                        </td>
                        <td style="vertical-align: middle; text-align: left;">
                            @Html.Telerik().DateTimePickerFor(model => model.EndDate).Name("EndDate").ClientEvents(events => events.OnLoad("EndTimePickerSet24h"))
                            @Html.ValidationMessageFor(model => model.EndDate)
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.RequestActualReasonID, "İş Talep Esas Nedeni")&nbsp;
                        </td>
                        <td style="vertical-align: middle; text-align: left;">
                            <br />
                            @(Html.Telerik().ComboBox()
            .Name("RequestActualReasonID")
            .HtmlAttributes(new { id = "ComboBox_wrapper_requestactualreason" })
            .AutoFill(true).HtmlAttributes(new { style = "width:210px;" }).DropDownHtmlAttributes(new { style = "width: 210px;" }).InputHtmlAttributes(new { style = "vertical-align: middle; font-size:100%; border: 1px solid; width: 200px;" })
            .BindTo((SelectList)ViewBag.RequestActualReasonID)
            .Filterable(filtering => filtering.FilterMode((AutoCompleteFilterMode)Enum.Parse(typeof(AutoCompleteFilterMode), "2", false)))
            .HighlightFirstMatch(true)
            .ClientEvents(events => events.OnChange("onRequestActualReasonIDChange"))
            )
                            <br />
                            @Html.ValidationMessageFor(model => model.RequestActualReasonID)
                        </td>
                    </tr>
                    <tr id="rqreason-box">
                        <td style="vertical-align: middle; text-align: right;">
                            Talep Nedeni Detay Açıklama&nbsp;
                        </td>
                        <td align="left" style="text-align: left;">
                            @Html.TextAreaFor(model => model.RequestActualReasonNote, new { cols = "60", rows = "4" })<br />
                            @Html.ValidationMessageFor(model => model.RequestActualReasonNote)
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.SendEmail)
                        </td>
                        <td style="vertical-align: middle; text-align: left;">
                            @Html.EditorFor(model => model.SendEmail)
                            @Html.ValidationMessageFor(model => model.SendEmail)
                        </td>
                    </tr>
                    @if (User.IsInRole("moderators"))
                    {
                        <tr>
                            <td style="vertical-align: middle; text-align: right;">
                                @Html.LabelFor(model => model.RequestStateID)
                            </td>
                            <td style="vertical-align: middle; text-align: left;">
                                @Html.DropDownList("RequestStateID", String.Empty)
                                @Html.ValidationMessageFor(model => model.RequestStateID)
                            </td>
                        </tr>
                        <tr>
                            <td style="vertical-align: middle; text-align: right;">
                                @Html.LabelFor(model => model.Note)
                            </td>
                            <td style="vertical-align: middle; text-align: left;">
                                @Html.TextAreaFor(model => model.Note, new { cols = "50", rows = "4" })
                                @Html.ValidationMessageFor(model => model.Note)
                            </td>
                        </tr>

                        <tr>
                            <td style="vertical-align: middle; text-align: right;">
                                @Html.LabelFor(model => model.UserReqID)
                            </td>
                            @if (!User.IsInRole("administrators"))
                            {
                                <td style="vertical-align: middle; text-align: left;">
                                    @Html.HiddenFor(model => model.UserReqID)
                                    @Html.DisplayFor(model => model.UserReq.FullName)
                                </td>

                            }
                            else
                            {
                                <td style="vertical-align: middle; text-align: left;">
                                    @Html.DropDownList("UserReqID", (SelectList)ViewData["UserReqID"], new { style = "width: 120px;" })
                                    @Html.ValidationMessageFor(model => model.UserReqID)
                                </td>
                            }
                        </tr>
                        <tr>
                            <td style="vertical-align: middle; text-align: right;">
                                @Html.LabelFor(model => model.IsAllDay)
                            </td>
                            <td style="vertical-align: middle; text-align: left;">
                                @Html.EditorFor(model => model.IsAllDay)
                                @Html.ValidationMessageFor(model => model.IsAllDay)
                            </td>
                        </tr>

                        <tr>
                            <td style="vertical-align: middle; text-align: right;">
                                @Html.LabelFor(model => model.IsApproved)
                            </td>
                            @if (!User.IsInRole("administrators"))
                            {
                                <td style="vertical-align: middle; text-align: left;">
                                    @Html.HiddenFor(model => model.IsApproved)
                                    @if (Model.IsApproved == true)
                                    {
                                        @:<img title="Bu iş istek onaylanarak kapatılmıştır." alt="Tamamlandı" src="@Url.Content("~/Content/images/checked.gif")"/>
                                 }
                                    else
                                    {
                                        @:<img title="Açık / Çalışma Sürüyor" alt="Devam Ediyor" src="@Url.Content("~/Content/images/delete.png")"/>

                                    }
                                </td>
                            }
                            else
                            {
                                <td style="vertical-align: middle; text-align: left;">
                                    @Html.HiddenFor(model => model.IsApproved)
                                    --
                                </td>
                            }
                        </tr>
                        <tr>
                            <td style="vertical-align: middle; text-align: right;">
                                @Html.LabelFor(model => model.UserID)
                            </td>
                            <td style="vertical-align: middle; text-align: left;">
                                @Html.DropDownList("UserID", String.Empty)
                                @Html.ValidationMessageFor(model => model.UserID)
                            </td>
                        </tr>
                        <!--
                        <tr>
                            <td style="vertical-align: middle; text-align: right;">
                                @Html.LabelFor(model => model.ValidationStateID)
                            </td>
                            <td style="vertical-align: middle; text-align: left;">
                                @Html.DropDownList("ValidationStateID", String.Empty)
                                @Html.ValidationMessageFor(model => model.ValidationStateID)
                            </td>
                        </tr>
                        -->
                    }
                    else
                    {
                        @Html.HiddenFor(model => model.RequestStateID)
                        @Html.HiddenFor(model => model.Note)
                        @Html.HiddenFor(model => model.EndDate)
                        @Html.HiddenFor(model => model.UserReqID)
                        @Html.HiddenFor(model => model.IsAllDay)
                        @Html.HiddenFor(model => model.IsApproved)
                        @Html.HiddenFor(model => model.UserID)
                        @Html.HiddenFor(model => model.ValidationStateID)
                    }
                    @Html.HiddenFor(model => model.ValidationStateID)
                    @Html.HiddenFor(model => model.TimeStamp)
                    @Html.Hidden("show", new { value = ViewBag.show })
                    @Html.Hidden("page", new { value = ViewBag.page })
                </tbody>
            </table>
        </fieldset>
        <div class="submit-row">
            <p class="deletelink-box">
                @Html.ActionLink("Vazgeç ve Geri Dön", "Index")&nbsp;|&nbsp;@Html.ActionLink("Sil?", "Delete", new { id = @Model.RequestIssueID })</p>
            <input type="submit" onclick="this.disabled=true;this.value='Lütfen Bekleyiniz..Calisiyor..';this.form.submit();"
                value="Onayla ve Gönder" />
        </div>

    }
</div>
@functions{
    public string asMb(float number)
    {
        float number_ = number / (1024 * 1024);
        return Math.Round(number_, 3).ToString();
    }
}