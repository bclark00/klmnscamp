@using Telerik.Web.Mvc.UI
@model Klmsncamp.Models.RequestIssue
@{
    ViewBag.Title = "İş İstek Düzenleme";
}
<script type="text/javascript">
    function TimePickerSet24h() {
        var picker = $("#StartDate").data("tDateTimePicker");
        picker.timeView.format = "HH:mm";
        picker.timeView.bind();
    }
    function EndTimePickerSet24h() {
        var picker = $("#EndDate").data("tDateTimePicker");
        picker.timeView.format = "HH:mm";
        picker.timeView.bind();
    }
</script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@{ Html.Telerik().ScriptRegistrar()
        .OnDocumentReady(@<text> var windowElement = $('#RequestIssueLogs'); var undoButton=
    $('#undo'); undoButton .bind('click', function(e) { windowElement.data('tWindow').open();
    undoButton.hide(); }) .toggle(!windowElement.is(':visible')); windowElement.bind('close',
    function() { undoButton.show(); });
    </text>); }
<div align="center" style="width: 640px; margin-left: auto; margin-right: auto; margin-top: 30px;">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.RequestIssueID)
        @Html.HiddenFor(model => model.WorkshopID)
        @Html.HiddenFor(model => model.Pre1EndDate)
        @Html.HiddenFor(model => model.Pre2EndDate)
        <fieldset class="module aligned ">
            <table style="width: 100%; margin-top: 15px;">
                <tbody>
                    <thead>
                        <th colspan="2">
                            İş İstek Düzenleme
                        </th>
                    </thead>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.LocationID)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if (!User.IsInRole("administrators") || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.LocationID)
                                @Html.DisplayFor(model => model.Location.Description)
                            }
                            else
                            {
                                <br />
                                @(Html.Telerik().ComboBox()
                    .Name("LocationID")
                    .HtmlAttributes(new { id = "ComboBox_wrapper_location" })
                    .AutoFill(true).HtmlAttributes(new { style = "width:210px;" }).DropDownHtmlAttributes(new { style = "width: 210px;" }).InputHtmlAttributes(new { style = "vertical-align: middle; font-size:100%; border: 1px solid; width: 200px;" })
                    .BindTo((SelectList)ViewBag.LocationID)
                    .Filterable(filtering => filtering.FilterMode((AutoCompleteFilterMode)Enum.Parse(typeof(AutoCompleteFilterMode), "2", false)))
                    .HighlightFirstMatch(true)
                    )
                                <br />
                                @Html.ValidationMessageFor(model => model.LocationID)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.PersonnelID)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if (!User.IsInRole("administrators") || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.PersonnelID)
                                @Html.DisplayFor(model => model.Personnel.FullName)
                            }
                            else
                            {
                                <br />
                                @(Html.Telerik().ComboBox()
                    .Name("PersonnelID")
                    .HtmlAttributes(new { id = "ComboBox_wrapper_personnel" })
                    .AutoFill(true).HtmlAttributes(new { style = "width:210px;" }).DropDownHtmlAttributes(new { style = "width: 210px;" }).InputHtmlAttributes(new { style = "vertical-align: middle; font-size:100%; border: 1px solid; width: 200px;" })
                    .BindTo((SelectList)ViewBag.PersonnelID)
                    .Filterable(filtering => filtering.FilterMode((AutoCompleteFilterMode)Enum.Parse(typeof(AutoCompleteFilterMode), "2", false)))
                    .HighlightFirstMatch(true)
                    )
                                <br />
                                @Html.ValidationMessageFor(model => model.PersonnelID)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.InventoryID)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if (Model.IsApproved == true)
                            {
                                try
                                {
                                @Model.Inventory.Description
                                }
                                catch
                                {
                                @:--

                                }
                            }
                            else
                            {
                                @Html.DropDownList("InventoryID", String.Empty)
                                @Html.ValidationMessageFor(model => model.InventoryID)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.RequestTypeID)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if ((!User.IsInRole("administrators") && !User.IsInRole("moderators")) || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.RequestTypeID)
                                @Html.DisplayFor(model => model.RequestType.Description)
                            }
                            else
                            {
                                @Html.DropDownList("RequestTypeID", String.Empty)
                                @Html.ValidationMessageFor(model => model.RequestTypeID)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.RequestStateID)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if ((!User.IsInRole("administrators") && !User.IsInRole("moderators")) || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.RequestStateID)
                                @Html.DisplayFor(model => model.RequestState.Description)
                            }
                            else
                            {
                                @Html.DropDownList("RequestStateID", String.Empty)
                                @Html.ValidationMessageFor(model => model.RequestStateID)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="height: auto; vertical-align: top; text-align: right;">
                            @Html.LabelFor(model => model.DetailedDescription)
                        </td>
                        <td style="color: #A80000; vertical-align: top; text-align: left;">
                            @if (!User.IsInRole("administrators") || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.DetailedDescription)
                                @Model.DetailedDescription
                            }
                            else
                            {
                                @Html.TextAreaFor(model => model.DetailedDescription, new { cols = "50", rows = "4" })
                                @Html.ValidationMessageFor(model => model.DetailedDescription)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.StartDate)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if (!User.IsInRole("administrators") || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.StartDate)
                                @Model.StartDate
                            }
                            else
                            {
                                @Html.Telerik().DateTimePickerFor(model => model.StartDate).Name("StartDate").ClientEvents(events => events.OnLoad("TimePickerSet24h"))
                                @Html.ValidationMessageFor(model => model.StartDate)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.SendEmail)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if ((!User.IsInRole("administrators") && !User.IsInRole("moderators")) || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.SendEmail)
                                if (Model.SendEmail == true)
                                {
                                @:EVET
                    }
                                else
                                {
                                @:HAYIR
                    }
                            }
                            else
                            {
                                @Html.EditorFor(model => model.SendEmail)
                                @Html.ValidationMessageFor(model => model.SendEmail)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="height: auto; vertical-align: top; text-align: right;">
                            @Html.LabelFor(model => model.Note)
                        </td>
                        <td style="color: #A80000; vertical-align: top; text-align: left;">
                            @if ((!User.IsInRole("administrators") && !User.IsInRole("moderators")) || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.Note)
                                @Model.Note
                            }
                            else
                            {
                                @Html.TextAreaFor(model => model.Note, new { cols = "50", rows = "4" })
                                @Html.ValidationMessageFor(model => model.Note)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.EndDate)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if (!User.IsInRole("administrators") || Model.IsApproved)
                            {
                                @Html.HiddenFor(model => model.EndDate)
                                @Model.EndDate
                            }
                            else
                            {
                                @Html.Telerik().DateTimePickerFor(model => model.EndDate).Name("EndDate").ClientEvents(events => events.OnLoad("EndTimePickerSet24h"))
                                @Html.ValidationMessageFor(model => model.EndDate)
                            }
                            @if (ViewBag.EndDatePostponeErr != "")
                            {
                                <br />@ViewBag.EndDatePostponeErr
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.IsAllDay)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if ((!User.IsInRole("administrators") && !User.IsInRole("moderators")) || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.IsAllDay)
                                if (Model.IsAllDay == true)
                                {
                                @:EVET
                    }
                                else
                                {
                                @:HAYIR
                    }
                            }
                            else
                            {
                                @Html.EditorFor(model => model.IsAllDay)
                                @Html.ValidationMessageFor(model => model.IsAllDay)
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.UserReqID)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if (!User.IsInRole("administrators") || Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.UserReqID)
                                @Html.DisplayFor(model => model.UserReq.FullName)
                            }
                            else
                            {
                                @Html.DropDownList("UserReqID", String.Empty)
                                @Html.ValidationMessageFor(model => model.UserReqID)

                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.IsApproved)
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if (Model.IsApproved == true && !User.IsInRole("administrators"))
                            {
                                @Html.HiddenFor(model => model.IsApproved)
                                if (Model.IsApproved == true)
                                {
                                @:<img title="Bu iş istek onaylanarak kapatılmıştır." alt="Tamamlandı" src="/Content/images/checked.gif"/>
                     }
                                else
                                {
                                @:<img title="Açık / Çalışma Sürüyor" alt="Devam Ediyor" src="/Content/images/delete.png"/>
                    }

                            }
                            else if (User.IsInRole("administrators"))
                            {
                                @Html.EditorFor(model => model.IsApproved)
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.IsApproved)
                                if (Model.IsApproved == true)
                                {
                                @:<img title="Bu iş istek onaylanarak kapatılmıştır." alt="Tamamlandı" src="/Content/images/checked.gif"/>
                     }
                                else
                                {
                                @:<img title="Açık / Çalışma Sürüyor" alt="Devam Ediyor" src="/Content/images/delete.png"/>
}
                            }
                        </td>
                    </tr>
                    <tr>
                        <td style="vertical-align: middle; text-align: right;">
                            @Html.LabelFor(model => model.UserID, "İş Sahibi")
                        </td>
                        <td style="color: #A80000; vertical-align: middle; text-align: left;">
                            @if (Model.IsApproved == true)
                            {
                                @Html.HiddenFor(model => model.UserID)
                                @Html.DisplayFor(model => model.User.FullName)
                                @Html.ValidationMessageFor(model => model.UserID)
                            }
                            else if (User.IsInRole("administrators") || User.IsInRole("moderators"))
                            {
                                @Html.DropDownList("UserID", String.Empty)
                                @Html.ValidationMessageFor(model => model.UserID)
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.User)
                                try
                                {
                                @Html.DisplayFor(model => model.User.FullName)
                                }
                                catch
                                {
                                @: Henüz Atanmamış..
}
                            }
                        </td>
                    </tr>
                    @Html.HiddenFor(model => model.ValidationStateID)
                    @Html.HiddenFor(model => model.TimeStamp)
                    @Html.Hidden("show", new { value = ViewBag.show })
                    @Html.Hidden("page", new { value = ViewBag.page })
                </tbody>
            </table>
        </fieldset>
        <div class="submit-row">
            <p class="deletelink-box">
                @Html.ActionLink("Vazgeç ve Geri Dön", "Index")</p>
            <input type="submit" value="Kaydet" />
        </div>

    }
</div>
@helper AlternateBackground(string color)
    {
        if (ViewBag.count == null) { ViewBag.count = 0; }
    <text>style="background-color:@(ViewBag.count % 2 == 1 ? color : "none")"</text>
        ViewBag.count++;
}
@helper TotalDebtSummaryTemplate(WebViewPage page)
    {

    <text>
    <div align="left">
        <table>
            <thead>
                <th>
                    TarihZaman
                </th>
                <th>
                    Kullanıcı
                </th>
                <th>
                    İşlemler
                </th>
            </thead>
            <tbody>
                @foreach (var Log in ViewBag.TheLogs as IList<Klmsncamp.Models.LogRequestIssue>)
                {

                    <tr @AlternateBackground("#E0E0E0")>
                        <td>
                            @Log.ModifyTime
                        </td>
                        <td>
                            @Log.User.FullName
                        </td>
                        <td>
                            @try
                            {
                                foreach (var logdetail in Log.LogRequestIssueDetails)
                                {
                                @logdetail.PropertyName <text>&nbsp;:&nbsp;</text>@logdetail.PropertyOldValue <text>&nbsp;--->&nbsp;</text> @logdetail.PropertyNewValue<br />
                                }
                            }
                            catch
                            { }
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>
    </text>
}
<div style="position: fixed; top: 15%; right: 400px;" align="right">
    <span id="undo" class="t-group">Güncellemeleri Göster</span>
    @{ Html.Telerik().Window()
                            .Name("RequestIssueLogs")
                            .Title("Güncelleme Bilgileri")
                            .Draggable(true)
                            .Resizable(resizing => resizing
                                .Enabled(false)

                            )
                            .Modal(false)
                            .Buttons(b => b.Close())
                            .Content(a => TotalDebtSummaryTemplate(this))
                            .Scrollable(true)
                            .Resizable(resizing => resizing
                                            .Enabled(true)
                                            .MinHeight(350)
                                            .MinWidth(350)
                                            .MaxHeight(800)
                                            .MaxWidth(350)
                                        )
                            .Width(350)
                            .Height(350)
                            .Render();
    }
</div>