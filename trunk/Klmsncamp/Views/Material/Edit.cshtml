@model Klmsncamp.Models.Material

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Material</legend>

        @Html.HiddenFor(model => model.MaterialID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MaterialCodeNum)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MaterialCodeNum)
            @Html.ValidationMessageFor(model => model.MaterialCodeNum)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LocationID, "Location")
        </div>
        <div class="editor-field">
            @Html.DropDownList("LocationID", String.Empty)
            @Html.ValidationMessageFor(model => model.LocationID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CorporateAccountID, "CorporateAccount")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CorporateAccountID", String.Empty)
            @Html.ValidationMessageFor(model => model.CorporateAccountID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ComponentModel)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ComponentModel)
            @Html.ValidationMessageFor(model => model.ComponentModel)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ParentMaterialID, "ParentMaterial")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ParentMaterialID", String.Empty)
            @Html.ValidationMessageFor(model => model.ParentMaterialID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MaterialCategoryID, "MaterialCategory")
        </div>
        <div class="editor-field">
            @Html.DropDownList("MaterialCategoryID", String.Empty)
            @Html.ValidationMessageFor(model => model.MaterialCategoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MaterialGroupID, "MaterialGroup")
        </div>
        <div class="editor-field">
            @Html.DropDownList("MaterialGroupID", String.Empty)
            @Html.ValidationMessageFor(model => model.MaterialGroupID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MaterialTypeID, "MaterialType")
        </div>
        <div class="editor-field">
            @Html.DropDownList("MaterialTypeID", String.Empty)
            @Html.ValidationMessageFor(model => model.MaterialTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RackLocation)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RackLocation)
            @Html.ValidationMessageFor(model => model.RackLocation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ValidationStateID, "ValidationState")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ValidationStateID", String.Empty)
            @Html.ValidationMessageFor(model => model.ValidationStateID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Note)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Note)
            @Html.ValidationMessageFor(model => model.Note)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
