@using Telerik.Web.Mvc.UI
@model IEnumerable<Klmsncamp.Models.Project>
@section script
{
    <style type="text/css">
        .t-grid .t-grid-header .t-header .t-link
        {
            height: auto;
        }

        .t-grid .t-grid-header .t-header, .t-grid .t-grid-header .t-last-header
        {
            white-space: normal;
        }

        #tooltip
        {
            position: absolute;
            display: none;
            border: 1px solid #333;
            background: #BDCDFF;
            padding: 5px 20px;
            color: #333;
            font-size: 10px;
            border-radius: 2px;
            -webkit-border-radius: 2px;
            -moz-border-radius: 2px;
        }
    </style>
}
@{
    ViewBag.Title = "Projeler";
}
<div align="center" style="width: 1400px; margin-left: auto; margin-right: auto;
    margin-top: 30px;">
    @{ Html.Telerik().Grid(Model).Name("Inventory").TableHtmlAttributes(new {style="text-align: left;"}).HtmlAttributes(new { style = "width: 1400px; margin-left: auto; margin-right: auto;" })
                                .ToolBar(commands => commands
                                            .Custom()
                                                .HtmlAttributes(new { id = "export" })
                                                .Text("Excel'e Aktar")
                                                .Action("ExportXls", "Project", new
                                                {
                                                    page = ViewBag.Currentpage,
                                                    orderBy = "~",
                                                    filter = ViewBag.CurrentShow
                                                }))
                            .Columns(columns =>
                            {
                                @columns.Template(
        @<text>
        @Html.ActionLink("Düzenle", "Edit", "Project", new { id = @item.ProjectID }, null)&nbsp;|&nbsp;
        @Html.ActionLink("Sil", "Delete", "Project", new { id = @item.ProjectID }, null)
        </text>
                                ).Width(100);
                                columns.Bound(o => o.Description).Width(750).Title("Açıklama");
                                columns.Bound(o => o.StartDate).Width(120).Title("Baş.Tarihi").Format("{0:d}");
                                columns.Bound(o => o.EndDate).Width(120).Title("Bit.Tarihi").Format("{0:d}");
                                columns.Bound(o => o.RequestState.Description).Width(150).Title("Proje Durumu");
                                columns.Bound(o => o.User.FullName).Width(150).Title("Proje Sahibi");

                            })
                            .DetailView(detailView => detailView.Template(o =>
                                {
                                    Html.Telerik().TabStrip()
                                            .Name("TabStrip_" + o.ProjectID)
                                            .SelectedIndex(0)
                                            .Items(items =>
                                            {
                                                items.Add().Text("Projeye ait açılan işler").Content(@<text>
        @(Html.Telerik().Grid(o.RequestIssues)
                                                                .Name("RequestIssues_" + o.ProjectID)
                                                                .Columns(columns =>
                                                                {
                                                                    columns.Bound(e => e.RequestIssueID).Title("#id#").Width(60);
                                                                    columns.Bound(e => e.Personnel.FullName).Title("İş İsteyen").Width(120);
                                                                    columns.Bound(e => e.DetailedDescription).Title("Açıklama").Width(360);
                                                                    columns.Bound(e => e.Location.CapitalizedDescription).Title("Departman").Width(120);
                                                                    columns.Bound(e => e.RequestType.Description).Title("İş Tipi").Width(120);
                                                                    columns.Bound(e => e.Note).Title("Süreç Notu").Width(200);
                                                                    columns.Bound(e => e.RequestState.Description).Title("Durumu").Width(150);
                                                                    columns.Bound(e => e.User.FullName).Title("İş Sahibi").Width(120);
                                                                    columns.Bound(e => e.StartDate).Width(90).Title("Baş.Tarihi").Format("{0:d}");

                                                                })
                                                                .Pageable()

                                                        )
        </text>);
                                                items.Add().Text("İlgili Departmanlar").Content(@<text>
        @(Html.Telerik().Grid(o.Locations)
                                                                .Name("Locations_" + o.ProjectID)
                                                                .Columns(columns =>
                                                                {
                                                                    columns.Bound(e => e.Description).Title("Açıklama").Width(350);
                                                                    columns.Bound(e => e.LocationGroup.Description).Title("Bağlı Olduğu Ana Departman").Width(410);

                                                                })
                                                                .Pageable()

                                                        )
        </text>);
                                                items.Add().Text("İlgili Firmalar").Content(@<text>
        @(Html.Telerik().Grid(o.CorporateAccounts)
                                                                .Name("CorporateAccounts_" + o.ProjectID)
                                                                .Columns(columns =>
                                                                {
                                                                    columns.Bound(e => e.Title).Title("Ünvanı").Width(250);
                                                                    columns.Bound(e => e.Address).Title("Adresi").Width(350);
                                                                    columns.Bound(e => e.CorpEmail).Title("Email").Width(300);
                                                                    columns.Bound(e => e.Phone1).Title("Telefon-1").Width(100);
                                                                    columns.Bound(e => e.CorporateType.Description).Title("Firma Tipi").Width(150);
                                                                    columns.Bound(e => e.ContactPerson).Title("Yetkili").Title("Yetkili").Width(170);
                                                                })
                                                                .Pageable()

                                                        )
        </text>);
                                                items.Add().Text("İlgili Personel").Content(@<text>
        @(Html.Telerik().Grid(o.Personnels)
                                                                .Name("Personnels_" + o.ProjectID)
                                                                .Columns(columns =>
                                                                {
                                                                    columns.Bound(e => e.FullName).Title("Adı-Soyadı").Width(350);
                                                                    columns.Bound(e => e.Location).Title("Birimi").Width(410);

                                                                })
                                                                .Pageable()

                                                        )
        </text>);

                                            })
                                            .Render();
                                }))
                                    .Scrollable(scrolling => scrolling.Enabled(true).Height(500))
                                                                                        .Sortable(sorting => sorting.Enabled(true).OrderBy(o => { o.Add("StartDate").Descending(); }))
                                    .Filterable(filtering => filtering.Enabled(true))
                                    .Groupable(grouping => grouping.Enabled(true))
                                    .Resizable(resizing => resizing.Columns(true))
                                    .Footer(true)
                                    .Localizable("tr-TR")
                                    .Render();
    }
</div>